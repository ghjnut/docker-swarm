version: '3.7'

services:
  server:
    image: ${DOCKER_IMAGE}:${DOCKER_TAG}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.hostname == hansel.jaked.in]
      restart_policy:
        condition: any
        delay: 0s
        max_attempts: 0
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-private
        - traefik.docker.network=traefik-private

        # https
        - traefik.http.routers.prometheus-secure.entrypoints=websecure
        - traefik.http.routers.prometheus-secure.rule=Host(`${DOMAIN:?DOMAIN not set}`)
        - traefik.http.routers.prometheus-secure.tls=true

        - traefik.http.services.prometheus.loadbalancer.server.port=${LB_PORT:?LB_PORT not set}
    configs:
      - source: prometheus.yml
        target: /etc/prometheus/prometheus.yml
    networks:
      - exporter
      - server
      - traefik-private
    volumes:
      - data:/prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml", "--storage.tsdb.path=/prometheus", "--storage.tsdb.retention.time=365d", "--web.console.libraries=/usr/share/prometheus/console_libraries", "--web.console.templates=/usr/share/prometheus/consoles"]

  cadvisor_exporter:
    image: ${CADVISOR_DOCKER_IMAGE}:${CADVISOR_DOCKER_TAG}
    deploy:
      endpoint_mode: dnsrr
      mode: global
      restart_policy:
        condition: any
        delay: 0s
        max_attempts: 0
      labels:
        - traefik.enable=true
        - traefik.constraint-label=traefik-private
        - traefik.docker.network=traefik-private

        - traefik.http.routers.cadvisor-secure.entrypoints=websecure
        - traefik.http.routers.cadvisor-secure.rule=Host(`${CADVISOR_DOMAIN:?CADVISOR_DOMAIN not set}`)
        - traefik.http.routers.cadvisor-secure.tls=true

        - traefik.http.services.cadvisor.loadbalancer.server.port=${CADVISOR_LB_PORT:?CADVISOR_LB_PORT not set}
    networks:
      - exporter
      - traefik-private
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  node_exporter:
    image: ${NODEEXPORTER_DOCKER_IMAGE}:${NODEEXPORTER_DOCKER_TAG}
    #image: quay.io/prometheus/node-exporter
    # map hostname:
    # node_uname_info{domainname="(none)",machine="x86_64",
    # nodename="derek.jaked.in",release="5.0.0-36-generic",sysname="Linux",
    # version="#39-Ubuntu SMP Tue Nov 12 09:46:06 UTC 2019"} 1
    # doesn't work
    hostname: "{{.Node.Hostname}}"
    deploy:
      endpoint_mode: dnsrr
      mode: global
      restart_policy:
        condition: any
        delay: 0s
        max_attempts: 0
    networks:
      - exporter
    volumes:
      - '/:/host:ro,rslave'
    command:
      - '--path.rootfs=/host'

networks:
  exporter:
    driver: overlay
    attachable: true
  server:
    driver: overlay
    attachable: true
  traefik-private:
    name: traefik-private
    external: true

# TODO persist?
volumes:
  data:

configs:
  prometheus.yml:
    name: prometheus-${SETTINGS_TIMESTAMP:?SETTINGS_TIMESTAMP not set}.yml
    file: config/prometheus.yml
