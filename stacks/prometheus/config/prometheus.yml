# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'
    static_configs:
    - targets: ['localhost:9090']

    # TODO should look like this
    #- job_name: cadvisor
    #  scrape_interval: 5s
    #  dns_sd_configs:
    #  - names:
    #    - 'tasks.cadvisor_prometheus_exporter'
    #    type: 'A'
    #    port: 8080

  - job_name: cadvisor
    scrape_interval: 5s
    dns_sd_configs:
    - names:
      - 'tasks.cadvisor_exporter'
      type: 'A'
      port: 8080

  - job_name: nvidia
    scrape_interval: 5s
    static_configs:
    - targets: ['nvidia_exporter:9445']

  - job_name: node
    scrape_interval: 5s
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks
        port: 9100
    relabel_configs:
    - source_labels: [__meta_dockerswarm_service_name]
      regex: "prometheus_node_exporter"
      action: keep
    # example: fetch metrics on port 9323.
    #- source_labels: [__meta_dockerswarm_node_address]
    #  target_label: __address__
    #  replacement: $1:9323
    # set hostname as instance label
    - source_labels: [__meta_dockerswarm_node_hostname]
      target_label: instance

  - job_name: pihole
    scrape_interval: 30s
    dns_sd_configs:
    - names:
      - 'tasks.pihole_prometheus_exporter'
      type: 'A'
      port: 9617
